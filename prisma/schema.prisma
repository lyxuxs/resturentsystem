// schema.prisma

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id       Int       @id @default(autoincrement())
  name     String
  email    String    @unique
  password String
  branches Branch[]  @relation("UserBranch")
  orders   Order[]
  reviews  Review[]
}

model Branch {
  id     Int    @id @default(autoincrement())
  name   String
  users  User[] @relation("UserBranch")
}

model InventoryItem {
  id          Int     @id @default(autoincrement())
  name        String
  description String
  qty         Int
  unitPrice   Float
}

model MenuItem {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  price       Float
  review      Float?
  userCount   Int       // Number of users who reviewed the item
  orders      Order[]   @relation("OrderItems")
  reviews     Review[]
  orderItems  OrderItem[]
}

model Order {
  id          Int           @id @default(autoincrement())
  createdAt   DateTime      @default(now())
  orderNumber String
  totalPrice  Float
  user        User          @relation(fields: [userId], references: [id])
  userId      Int
  items       OrderItem[]
  menuItems   MenuItem[]    @relation("OrderItems")
}

model OrderItem {
  id          Int      @id @default(autoincrement())
  quantity    Int
  menuItem    MenuItem @relation(fields: [menuItemId], references: [id])
  menuItemId  Int
  order       Order    @relation(fields: [orderId], references: [id])
  orderId     Int
}

model Review {
  id        Int      @id @default(autoincrement())
  rating    Float
  comment   String?
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  menuItem  MenuItem @relation(fields: [menuItemId], references: [id])
  menuItemId Int
}
